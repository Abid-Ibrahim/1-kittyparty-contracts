/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KittyPartyYieldGeneratorZapper,
  KittyPartyYieldGeneratorZapperInterface,
} from "../KittyPartyYieldGeneratorZapper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "kittyparty",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountPerRound",
        type: "uint256",
      },
    ],
    name: "KittyPartyReadyToYield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZapContract",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "treasuryContractParam",
        type: "address",
      },
    ],
    name: "__KittyPartyYieldGeneratorZapper_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "zapCallData",
        type: "bytes",
      },
    ],
    name: "createLockedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "vaultTokensRec",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "kittyPartyYieldInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lockedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yieldGeneratedInLastRound",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sellTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpTokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "pendingToYield",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kittyParty",
        type: "address",
      },
    ],
    name: "lockedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "totalLockedValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kittyParty",
        type: "address",
      },
    ],
    name: "lockedPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sellTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpTokenAddress",
        type: "address",
      },
    ],
    name: "setPartyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_pendingToYield",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountPerRound",
        type: "uint256",
      },
    ],
    name: "setStatusOfKittyPartyLockedValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_zapContract",
        type: "address",
      },
    ],
    name: "setZapContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kittyParty",
        type: "address",
      },
    ],
    name: "statusOfKittyPartyLockedValue",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "treasuryContractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kittyParty",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "zapCallData",
        type: "bytes",
      },
    ],
    name: "unwindLockedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "tokensRec",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kittyParty",
        type: "address",
      },
    ],
    name: "yieldGenerated",
    outputs: [
      {
        internalType: "uint256",
        name: "yieldGeneratedInLastRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612530806100206000396000f3fe6080604052600436106100fe5760003560e01c8063a153e70811610095578063d823d46011610064578063d823d46014610353578063dc215b8e1461037c578063df05ab78146103b9578063e91f214e146103e2578063f2fde38b1461040d576100fe565b8063a153e70814610283578063ab020377146102c0578063afbdfcd1146102eb578063c5f956af14610328576100fe565b80637298696b116100d15780637298696b146101c25780637b80c204146101f25780638baa89cc1461021b5780638da5cb5b14610258576100fe565b806303add409146101035780630a0cc3b71461012c5780631acb53901461016e578063715018a6146101ab575b600080fd5b34801561010f57600080fd5b5061012a60048036038101906101259190611cfc565b610436565b005b34801561013857600080fd5b50610153600480360381019061014e9190611bed565b610549565b6040516101659695949392919061214d565b60405180910390f35b34801561017a57600080fd5b5061019560048036038101906101909190611bed565b6105f2565b6040516101a29190612132565b60405180910390f35b3480156101b757600080fd5b506101c061063e565b005b6101dc60048036038101906101d79190611d38565b6106c6565b6040516101e99190612132565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190611bed565b610b58565b005b34801561022757600080fd5b50610242600480360381019061023d9190611c7b565b610c7b565b60405161024f9190612132565b60405180910390f35b34801561026457600080fd5b5061026d61134d565b60405161027a9190611f8f565b60405180910390f35b34801561028f57600080fd5b506102aa60048036038101906102a59190611bed565b611377565b6040516102b79190612132565b60405180910390f35b3480156102cc57600080fd5b506102d56113c3565b6040516102e29190611faa565b60405180910390f35b3480156102f757600080fd5b50610312600480360381019061030d9190611bed565b6113e9565b60405161031f9190611f8f565b60405180910390f35b34801561033457600080fd5b5061033d611455565b60405161034a9190611f8f565b60405180910390f35b34801561035f57600080fd5b5061037a60048036038101906103759190611c16565b61147f565b005b34801561038857600080fd5b506103a3600480360381019061039e9190611bed565b61153f565b6040516103b09190612017565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db9190611c3f565b611598565b005b3480156103ee57600080fd5b506103f761169e565b6040516104049190612132565b60405180910390f35b34801561041957600080fd5b50610434600480360381019061042f9190611bed565b6116b4565b005b61043e6117ac565b73ffffffffffffffffffffffffffffffffffffffff1661045c61134d565b73ffffffffffffffffffffffffffffffffffffffff16146104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a9906120d2565b60405180910390fd5b81606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160146101000a81548160ff0219169083151502179055507f0f64673e1510bdd5eb0545eca741a9f2b598dda042feaabec336d2beb0820c30338260405161053d929190611fee565b60405180910390a15050565b60676020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160149054906101000a900460ff16905086565b6000606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6106466117ac565b73ffffffffffffffffffffffffffffffffffffffff1661066461134d565b73ffffffffffffffffffffffffffffffffffffffff16146106ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b1906120d2565b60405180910390fd5b6106c460006117b4565b565b60006106d06117ac565b73ffffffffffffffffffffffffffffffffffffffff166106ee61134d565b73ffffffffffffffffffffffffffffffffffffffff1614610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b906120d2565b60405180910390fd5b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff80166040518363ffffffff1660e01b8152600401610881929190611fc5565b602060405180830381600087803b15801561089b57600080fd5b505af11580156108af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d39190611cd3565b610912576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610909906120f2565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161094d9190611f8f565b60206040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190611d7d565b90506000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163488886040516109eb929190611f5f565b60006040518083038185875af1925050503d8060008114610a28576040519150601f19603f3d011682016040523d82523d6000602084013e610a2d565b606091505b5050905080610a71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6890612112565b60405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610aab9190611f8f565b60206040518083038186803b158015610ac357600080fd5b505afa158015610ad7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afb9190611d7d565b610b0591906121d5565b945084606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505050505092915050565b600060019054906101000a900460ff1680610b7e575060008054906101000a900460ff16155b610bbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb4906120b2565b60405180910390fd5b60008060019054906101000a900460ff161590508015610c0d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c5661187a565b8015610c775760008060016101000a81548160ff0219169083151502179055505b5050565b6000806040516024016040516020818303038152906040527fc040e6b8000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000808673ffffffffffffffffffffffffffffffffffffffff1683604051610d2b9190611f78565b600060405180830381855afa9150503d8060008114610d66576040519150601f19603f3d011682016040523d82523d6000602084013e610d6b565b606091505b509150915081610db0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da790612092565b60405180910390fd5b600081806020019051810190610dc69190611d7d565b905060038114610e0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0290612032565b60405180910390fd5b6000606760008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000606760008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff80166040518363ffffffff1660e01b8152600401610f48929190611fc5565b602060405180830381600087803b158015610f6257600080fd5b505af1158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a9190611cd3565b610fd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd0906120f2565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461109c578273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110479190611f8f565b60206040518083038186803b15801561105f57600080fd5b505afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190611d7d565b61109e565b475b90506000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168b8b6040516110eb929190611f5f565b6000604051808303816000865af19150503d8060008114611128576040519150601f19603f3d011682016040523d82523d6000602084013e61112d565b606091505b5050905080611171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116890612052565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611234578473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016111df9190611f8f565b60206040518083038186803b1580156111f757600080fd5b505afa15801561120b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122f9190611d7d565b611236565b475b9050828161124491906121d5565b995089606760008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055508473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016112ea929190611fee565b602060405180830381600087803b15801561130457600080fd5b505af1158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c9190611cd3565b505050505050505050509392505050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6114876117ac565b73ffffffffffffffffffffffffffffffffffffffff166114a561134d565b73ffffffffffffffffffffffffffffffffffffffff16146114fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f2906120d2565b60405180910390fd5b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000606760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160149054906101000a900460ff169050919050565b81606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6fffffffffffffffffffffffffffffffff801681565b6116bc6117ac565b73ffffffffffffffffffffffffffffffffffffffff166116da61134d565b73ffffffffffffffffffffffffffffffffffffffff1614611730576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611727906120d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179790612072565b60405180910390fd5b6117a9816117b4565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff16806118a0575060008054906101000a900460ff16155b6118df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d6906120b2565b60405180910390fd5b60008060019054906101000a900460ff16159050801561192f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611937611963565b61193f611a3c565b80156119605760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611989575060008054906101000a900460ff16155b6119c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119bf906120b2565b60405180910390fd5b60008060019054906101000a900460ff161590508015611a18576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015611a395760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611a62575060008054906101000a900460ff16155b611aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a98906120b2565b60405180910390fd5b60008060019054906101000a900460ff161590508015611af1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611b01611afc6117ac565b6117b4565b8015611b225760008060016101000a81548160ff0219169083151502179055505b50565b600081359050611b348161249e565b92915050565b600081359050611b49816124b5565b92915050565b600081359050611b5e816124cc565b92915050565b600081519050611b73816124cc565b92915050565b60008083601f840112611b8b57600080fd5b8235905067ffffffffffffffff811115611ba457600080fd5b602083019150836001820283011115611bbc57600080fd5b9250929050565b600081359050611bd2816124e3565b92915050565b600081519050611be7816124e3565b92915050565b600060208284031215611bff57600080fd5b6000611c0d84828501611b25565b91505092915050565b600060208284031215611c2857600080fd5b6000611c3684828501611b3a565b91505092915050565b60008060408385031215611c5257600080fd5b6000611c6085828601611b25565b9250506020611c7185828601611b25565b9150509250929050565b600080600060408486031215611c9057600080fd5b6000611c9e86828701611b25565b935050602084013567ffffffffffffffff811115611cbb57600080fd5b611cc786828701611b79565b92509250509250925092565b600060208284031215611ce557600080fd5b6000611cf384828501611b64565b91505092915050565b60008060408385031215611d0f57600080fd5b6000611d1d85828601611b4f565b9250506020611d2e85828601611bc3565b9150509250929050565b60008060208385031215611d4b57600080fd5b600083013567ffffffffffffffff811115611d6557600080fd5b611d7185828601611b79565b92509250509250929050565b600060208284031215611d8f57600080fd5b6000611d9d84828501611bd8565b91505092915050565b611daf81612263565b82525050565b611dbe8161221b565b82525050565b611dcd81612209565b82525050565b611ddc8161222d565b82525050565b6000611dee83856121b9565b9350611dfb838584612299565b82840190509392505050565b6000611e12826121ae565b611e1c81856121b9565b9350611e2c8185602086016122a8565b80840191505092915050565b6000611e456013836121c4565b9150611e508261230a565b602082019050919050565b6000611e68600e836121c4565b9150611e7382612333565b602082019050919050565b6000611e8b6026836121c4565b9150611e968261235c565b604082019050919050565b6000611eae6017836121c4565b9150611eb9826123ab565b602082019050919050565b6000611ed1602e836121c4565b9150611edc826123d4565b604082019050919050565b6000611ef46020836121c4565b9150611eff82612423565b602082019050919050565b6000611f176014836121c4565b9150611f228261244c565b602082019050919050565b6000611f3a600d836121c4565b9150611f4582612475565b602082019050919050565b611f5981612259565b82525050565b6000611f6c828486611de2565b91508190509392505050565b6000611f848284611e07565b915081905092915050565b6000602082019050611fa46000830184611dc4565b92915050565b6000602082019050611fbf6000830184611db5565b92915050565b6000604082019050611fda6000830185611da6565b611fe76020830184611f50565b9392505050565b60006040820190506120036000830185611dc4565b6120106020830184611f50565b9392505050565b600060208201905061202c6000830184611dd3565b92915050565b6000602082019050818103600083015261204b81611e38565b9050919050565b6000602082019050818103600083015261206b81611e5b565b9050919050565b6000602082019050818103600083015261208b81611e7e565b9050919050565b600060208201905081810360008301526120ab81611ea1565b9050919050565b600060208201905081810360008301526120cb81611ec4565b9050919050565b600060208201905081810360008301526120eb81611ee7565b9050919050565b6000602082019050818103600083015261210b81611f0a565b9050919050565b6000602082019050818103600083015261212b81611f2d565b9050919050565b60006020820190506121476000830184611f50565b92915050565b600060c0820190506121626000830189611f50565b61216f6020830188611f50565b61217c6040830187611dc4565b6121896060830186611dc4565b6121966080830185611dc4565b6121a360a0830184611dd3565b979650505050505050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006121e082612259565b91506121eb83612259565b9250828210156121fe576121fd6122db565b5b828203905092915050565b600061221482612239565b9050919050565b600061222682612239565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061226e82612275565b9050919050565b600061228082612287565b9050919050565b600061229282612239565b9050919050565b82818337600083830152505050565b60005b838110156122c65780820151818401526020810190506122ab565b838111156122d5576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e6f7420696e20756e77696e6420737461676500000000000000000000000000600082015250565b7f5a6170204f7574204661696c6564000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420612076616c6964206b69747479207061727479000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420656e6f75676820616c6c6f77616e6365000000000000000000000000600082015250565b7f5a617020496e204661696c656400000000000000000000000000000000000000600082015250565b6124a781612209565b81146124b257600080fd5b50565b6124be8161221b565b81146124c957600080fd5b50565b6124d58161222d565b81146124e057600080fd5b50565b6124ec81612259565b81146124f757600080fd5b5056fea2646970667358221220a21c9f3ece33465f1fb9e03032216869a5afedef05c635f8210db8fd172ec22764736f6c63430008040033";

export class KittyPartyYieldGeneratorZapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KittyPartyYieldGeneratorZapper> {
    return super.deploy(
      overrides || {}
    ) as Promise<KittyPartyYieldGeneratorZapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KittyPartyYieldGeneratorZapper {
    return super.attach(address) as KittyPartyYieldGeneratorZapper;
  }
  connect(signer: Signer): KittyPartyYieldGeneratorZapper__factory {
    return super.connect(signer) as KittyPartyYieldGeneratorZapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KittyPartyYieldGeneratorZapperInterface {
    return new utils.Interface(_abi) as KittyPartyYieldGeneratorZapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KittyPartyYieldGeneratorZapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KittyPartyYieldGeneratorZapper;
  }
}
