/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KittyPartyController,
  KittyPartyControllerInterface,
} from "../KittyPartyController";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "Completed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
    ],
    name: "PaidFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "internalState",
        type: "uint256",
      },
    ],
    name: "PartyCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "refund",
        type: "uint256",
      },
    ],
    name: "RefundRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prevStage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nextStage",
        type: "uint256",
      },
    ],
    name: "StageTransition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StopStaking",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "party",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "winners",
        type: "uint256[]",
      },
    ],
    name: "WinnersDecided",
    type: "event",
  },
  {
    inputs: [],
    name: "addRoundDeposits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "applyCompleteParty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "applyInitialVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "applyWinnerStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "callDataForUnwind",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calldataForLock",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "changeState",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRound",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_inviteHash",
        type: "bytes32",
      },
    ],
    name: "depositAndAddKittenToParty",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "durationInDays",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "kreatorFeesInBasisPoints",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "daoFeesInBasisPoints",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "winningStrategy",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "timeToCollection",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "maxKittens",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "durationInDays",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "amountInDAIPerRound",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "partyName",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "daiAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "yieldContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "winnerStrategy",
            type: "address",
          },
        ],
        internalType: "struct IKittenPartyInit.KittyInitiator",
        name: "_kittyInitiator",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sellTokenAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "lpTokenAddress",
            type: "address",
          },
        ],
        internalType: "struct IKittenPartyInit.KittyYieldArgs",
        name: "_kittyYieldArgs",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tomCatContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "accountantContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "litterAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoTreasuryContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "keeperContractAddress",
            type: "address",
          },
        ],
        internalType: "struct IKittenPartyInit.KittyPartyFactoryArgs",
        name: "_kPFactory",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_kreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_kreatorStake",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isTransitionRequired",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issueRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kPFactory",
    outputs: [
      {
        internalType: "address",
        name: "tomCatContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountantContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "litterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "daoTreasuryContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "keeperContractAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kittyInitiator",
    outputs: [
      {
        internalType: "uint8",
        name: "kreatorFeesInBasisPoints",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "daoFeesInBasisPoints",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "winningStrategy",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "timeToCollection",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "maxKittens",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "durationInDays",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amountInDAIPerRound",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "partyName",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "daiAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "yieldContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "winnerStrategy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kittyPartyControllerVars",
    outputs: [
      {
        internalType: "address",
        name: "kreator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "kreatorStake",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitToSplit",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "localKittens",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "internalState",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastStageTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfRounds",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "partyRoundKittens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payOrganizerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_timeToCollection",
        type: "uint8",
      },
    ],
    name: "setActivityInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_calldataForLock",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_callDataForUnwind",
        type: "bytes",
      },
    ],
    name: "setCallDataForYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_inviteHash",
        type: "bytes32",
      },
    ],
    name: "setInviteHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stage",
    outputs: [
      {
        internalType: "enum KittyPartyStateTransition.KittyPartyStages",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startNextRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startStakingMultiRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeSinceChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeToCollection",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b50612da38061002a6000396000f3fe608060405234801561001057600080fd5b50600436106101e45760003560e01c806368a746b21161010f578063c040e6b8116100a2578063f1a269ac11610071578063f1a269ac1461052e578063f29e493f14610536578063f4b9fa751461053e578063fcaa76641461056957600080fd5b8063c040e6b8146104fc578063eb5a9a5014610516578063ef33a1181461051e578063f097f14e1461052657600080fd5b80638a19c8bc116100de5780638a19c8bc14610468578063b0a48ccc1461047b578063b11746de14610483578063b246b1dd146104e957600080fd5b806368a746b214610359578063715a70a7146103615780638412e6671461043d57806386fcc9441461045557600080fd5b8063348056e7116101875780634c1064c2116101565780634c1064c21461031057806354b6ba951461032357806358d3467c14610331578063599b8e051461034657600080fd5b8063348056e7146102b1578063376387c1146102d75780633bde045f146102df5780633c3ccc441461030857600080fd5b8063099f7cdf116101c3578063099f7cdf1461020e5780630c3c784414610221578063125e245614610229578063236ad73c1461029a57600080fd5b8062c044f0146101e95780630550b266146101f357806306214349146101fb575b600080fd5b6101f1610571565b005b6101f1610705565b6101f1610209366004612486565b61096c565b6101f161021c3660046124aa565b6109a3565b6101f16109bf565b601154601254601354601454601554610258946001600160a01b03169392919060ff8082169161010090041686565b604080516001600160a01b039097168752602087019590955293850192909252606084015260ff90811660808401521660a082015260c0015b60405180910390f35b6102a360015481565b604051908152602001610291565b6002546102c5906301000000900460ff1681565b60405160ff9091168152602001610291565b6102c5610a70565b6002546102f590640100000000900461ffff1681565b60405161ffff9091168152602001610291565b6101f1610c8a565b6102a361031e3660046124aa565b610ca8565b6002546102f59061ffff1681565b610339610cc9565b60405161029191906124ef565b6101f16103543660046125d9565b610d57565b6101f1610d9a565b600654600754600854600954600a54600b546103cc9560ff808216966101008304821696620100008404831696630100000085049093169561ffff640100000000860481169666010000000000009096041694929391926001600160a01b039283169291821691168b565b6040805160ff9c8d1681529a8c1660208c0152988b16988a019890985298909516606088015261ffff93841660808801529290911660a086015260c085015260e08401526001600160a01b039081166101008401529283166101208301529190911661014082015261016001610291565b610445610e86565b6040519015158152602001610291565b6104456104633660046124aa565b610eae565b6002546102c59062010000900460ff1681565b610339611157565b600c54600d54600e54600f546010546104af946001600160a01b03908116948116938116928116911685565b604080516001600160a01b03968716815294861660208601529285169284019290925283166060830152909116608082015260a001610291565b6101f16104f7366004612652565b611164565b6000546105099060ff1681565b60405161029191906126e8565b6101f161132f565b610445611436565b6101f161164b565b6101f16116bf565b6102a361197c565b601654610551906001600160a01b031681565b6040516001600160a01b039091168152602001610291565b6102a361198c565b61057b60036119a4565b60145461058757600080fd5b600554604080517fbe1c766b00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163be1c766b9160048083019260209291908290030181865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190612710565b60145461061b919061273f565b60006014819055600554604080517fdf15c37e000000000000000000000000000000000000000000000000000000008152905193945091926001600160a01b039091169163df15c37e91600480830192869291908290030181865afa158015610688573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106b09190810190612761565b90506106bc8183611a1a565b6106c8600460006123c0565b7f439e81718f4bdf112226d70821f80ecd52126ae3c81a445222a7345f8dd4faaf30826040516106f9929190612842565b60405180910390a15050565b61070d611b3f565b61071760036119a4565b6005546015546040517f66ea5f5700000000000000000000000000000000000000000000000000000000815260ff90911660048201526001600160a01b03909116906366ea5f5790602401600060405180830381600087803b15801561077c57600080fd5b505af1158015610790573d6000803e3d6000fd5b5050600a546040516308e7df1360e21b81526001600160a01b03909116925063239f7c4c91506107c5906018906004016128a1565b6020604051808303816000875af11580156107e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108089190612710565b5060405130602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03167f1acb539000000000000000000000000000000000000000000000000000000000179052600a54905191925060009182916001600160a01b03169061087d908590612949565b600060405180830381855afa9150503d80600081146108b8576040519150601f19603f3d011682016040523d82523d6000602084013e6108bd565b606091505b5091509150816109145760405162461bcd60e51b815260206004820152600360248201527f594531000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b808060200190518101906109289190612710565b60138190556040805130815260208101929092527f0100607dada7474255eccec3ac41980d65e94a27edf395d8bc37423fdc1c2284910160405180910390a1505050565b6011546001600160a01b0316331461098357600080fd5b6002805460ff90921663010000000263ff00000019909216919091179055565b6011546001600160a01b031633146109ba57600080fd5b600355565b6109c7611b3f565b6109d160046119a4565b601554610100900460ff166002146109e857600080fd5b6015805461ff001916610300179055601154610a10906001600160a01b031660016004611d3e565b601154601254610a2b916001600160a01b0316906000611d3e565b6015546040805130815261010090920460ff1660208301527f67a57a1fb1b70372253313a75f3514431f00491305fd2d0b75fef50b3fcb7e66910160405180910390a1565b60008060005460ff166005811115610a8a57610a8a6126d2565b148015610ac25750600254610aac906301000000900460ff1662015180612965565b62ffffff16600154610abe9190612990565b4210155b80610afd5750600160005460ff166005811115610ae157610ae16126d2565b148015610afd5750600154610af99062015180612990565b4210155b80610b4e5750600260005460ff166005811115610b1c57610b1c6126d2565b148015610b4e5750600254610b389061ffff1662015180612965565b62ffffff16600154610b4a9190612990565b4210155b80610baa5750600360005460ff166005811115610b6d57610b6d6126d2565b148015610b885750600154610b8490617080612990565b4210155b8015610baa575060025462010000810460ff1664010000000090910461ffff16115b80610c075750600360005460ff166005811115610bc957610bc96126d2565b148015610be45750600154610be090617080612990565b4210155b8015610c07575060025462010000810460ff1664010000000090910461ffff1611155b15610c845760005460029060ff166005811115610c2657610c266126d2565b60ff161115610c5b5760025462010000810460ff1664010000000090910461ffff1611610c54576001610c5e565b6000610c5e565b60005b60005460ff166005811115610c7557610c756126d2565b610c7f91906129a8565b905090565b50605890565b610c9460036119a4565b610c9c611b3f565b610ca660016119a4565b565b60048181548110610cb857600080fd5b600091825260209091200154905081565b60188054610cd69061286c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d029061286c565b8015610d4f5780601f10610d2457610100808354040283529160200191610d4f565b820191906000526020600020905b815481529060010190602001808311610d3257829003601f168201915b505050505081565b6011546001600160a01b03163314610d6e57600080fd5b8151610d819060179060208501906123de565b508051610d959060189060208401906123de565b505050565b60155460ff166002811015610dae57600080fd5b610db6611b3f565b610dc060026119a4565b60155460ff61010090910416600114610e1b5760405162461bcd60e51b815260206004820152601d60248201527f526f756e6473207765726520616c726561647920696e69746961746564000000604482015260640161090b565b6015805461ff001916610200179055600654600754610e4691640100000000900461ffff16906129cd565b60125410610e7357506015546002805465ffff00000000191660ff90921664010000000002919091179055565b6002805465ffff00000000191690555b50565b6011546000906001600160a01b03163314610ea057600080fd5b610ea8611b3f565b50600190565b6000818060035414610ebf57600080fd5b610ec7611b3f565b610ed160006119a4565b601554610ee29060ff1660016129a8565b6015805460ff191660ff929092169182179055600654640100000000900461ffff161015610f0f57600080fd5b6011546001600160a01b0316331415610f6a5760405162461bcd60e51b815260206004820152601d60248201527f4b726561746f722063616e6e6f74206a6f696e206f776e207061727479000000604482015260640161090b565b600254640100000000900461ffff1615610fc65760405162461bcd60e51b815260206004820152601d60248201527f526f756e6473207765726520616c726561647920696e69746961746564000000604482015260640161090b565b60405133602482015260009060440160408051601f198184030181529181526020820180516001600160e01b03167f5bea863500000000000000000000000000000000000000000000000000000000179052600e5490519192506000916001600160a01b039091169061103a908490612949565b6000604051808303816000865af19150503d8060008114611077576040519150601f19603f3d011682016040523d82523d6000602084013e61107c565b606091505b50509050806110cd5760405162461bcd60e51b815260206004820152601060248201527f4b697474656e206e6f7420616464656400000000000000000000000000000000604482015260640161090b565b6110d5611e3a565b600a54604051637298696b60e01b81526001600160a01b0390911690637298696b90611106906017906004016128a1565b6020604051808303816000875af1158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190612710565b506001935050505b50919050565b60178054610cd69061286c565b601554610100900460ff16156111bc5760405162461bcd60e51b815260206004820152601360248201527f416c726561647920496e697469616c697a656400000000000000000000000000604482015260640161090b565b6015805461ff0019166101001790558460066111d88282612a29565b50839050600c6111e88282612bc4565b5050601180546001600160a01b0319166001600160a01b038416179055601281905561121c61012086016101008701612c9d565b601680546001600160a01b039283166001600160a01b031991821617909155600b5460058054909216908316179055600a541663df05ab786112616020870187612c9d565b6112716040880160208901612c9d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381600087803b1580156112d157600080fd5b505af11580156112e5573d6000803e3d6000fd5b506112fa9250505060c0860160a08701612cba565b6002805461ffff191661ffff929092169190911790556113286113236080870160608801612486565b61223d565b5050505050565b61133960036119a4565b60135461134557600080fd5b6006546013546000916127109161135f9160ff16906129cd565b611369919061273f565b6006546013549192506000916127109161138c9161010090910460ff16906129cd565b611396919061273f565b90506113a28183612990565b6013546113af9190612cd7565b601455600060138190556011546113d3916001600160a01b03909116908490611d3e565b600f546113eb906001600160a01b0316826000611d3e565b7f52e9b61fb2517a3b8014966f3de98e7485159cdb95f21696e150f50171c65235306114178385612990565b604080516001600160a01b0390931683526020830191909152016106f9565b6040513060248201523360448201819052600091829060640160408051601f198184030181529181526020820180516001600160e01b03167f9f39105500000000000000000000000000000000000000000000000000000000179052600e54905191925060009182916001600160a01b0316906114b4908590612949565b600060405180830381855afa9150503d80600081146114ef576040519150601f19603f3d011682016040523d82523d6000602084013e6114f4565b606091505b5091509150816115465760405162461bcd60e51b815260206004820152600260248201527f4e45000000000000000000000000000000000000000000000000000000000000604482015260640161090b565b60008180602001905181019061155c9190612cee565b90506001811515146115b05760405162461bcd60e51b815260206004820152600260248201527f4e52000000000000000000000000000000000000000000000000000000000000604482015260640161090b565b6115b8611b3f565b6115c260016119a4565b6115ca611e3a565b600a54604051637298696b60e01b81526001600160a01b0390911690637298696b906115fb906017906004016128a1565b6020604051808303816000875af115801561161a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163e9190612710565b5060019550505050505090565b61165560016119a4565b60155460045460ff909116146116ad5760405162461bcd60e51b815260206004820152600f60248201527f4b697474656e204d697373696e67210000000000000000000000000000000000604482015260640161090b565b6116b5611b3f565b610ca660026119a4565b6011546001600160a01b031633146116d657600080fd5b600360005460ff1660058111156116ef576116ef6126d2565b141561173d5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f7420726566756e6420696e207061796f7574000000000000000000604482015260640161090b565b600460005460ff166005811115611756576117566126d2565b14156117a45760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420726566756e6420696e20436f6d706c65746564000000000000604482015260640161090b565b601554610100900460ff16600314156117ff5760405162461bcd60e51b815260206004820152600d60248201527f43616e6e6f7420726566756e6400000000000000000000000000000000000000604482015260640161090b565b6015805461ff00191661030017905561181860056122ec565b60155460ff161561190357600a546040516308e7df1360e21b81526001600160a01b039091169063239f7c4c90611854906018906004016128a1565b6020604051808303816000875af1158015611873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118979190612710565b506118f760048054806020026020016040519081016040528092919081815260200182805480156118e757602002820191906000526020600020905b8154815260200190600101908083116118d3575b5050505050600660010154611a1a565b611903600460006123c0565b60065460125460009160649161192191610100900460ff16906129cd565b61192b919061273f565b601154909150611946906001600160a01b0316826000611d3e565b6040518181527f431b80eca5334464928f696b9231ecf0987e4f1a105f7f560f22514a2fb93dd79060200160405180910390a150565b600060015442610c7f9190612cd7565b6000805460ff166005811115610c7f57610c7f6126d2565b8060058111156119b6576119b66126d2565b60005460ff1660058111156119cd576119cd6126d2565b14610e835760405162461bcd60e51b815260206004820152601960248201527f4e6f7420696e2074686520657870656374656420737461676500000000000000604482015260640161090b565b600e54604051600091611a41916001600160a01b0390911690309086908690602401612d10565b60408051601f198184030181529181526020820180516001600160e01b03167f4c34c34000000000000000000000000000000000000000000000000000000000179052600d5490519192506000916001600160a01b0390911690611aa6908490612949565b6000604051808303816000865af19150503d8060008114611ae3576040519150601f19603f3d011682016040523d82523d6000602084013e611ae8565b606091505b5050905080611b395760405162461bcd60e51b815260206004820152601460248201527f42617463682072656365697074206661696c6564000000000000000000000000604482015260640161090b565b50505050565b6000805460ff166005811115611b5757611b576126d2565b148015611b8f5750600254611b79906301000000900460ff1662015180612965565b62ffffff16600154611b8b9190612990565b4210155b15611b9e57610ca660026122ec565b600160005460ff166005811115611bb757611bb76126d2565b148015611bd35750600154611bcf9062015180612990565b4210155b15611be257610ca660016122ec565b600260005460ff166005811115611bfb57611bfb6126d2565b148015611c2d5750600254611c179061ffff1662015180612965565b62ffffff16600154611c299190612990565b4210155b15611c3c57610ca660016122ec565b600360005460ff166005811115611c5557611c556126d2565b148015611c705750600154611c6c90617080612990565b4210155b8015611c92575060025462010000810460ff1664010000000090910461ffff16115b15611cd8576000805460ff191660011790556002805460ff62010000909104169080611cbd83612d4d565b91906101000a81548160ff021916908360ff16021790555050565b600360005460ff166005811115611cf157611cf16126d2565b148015611d0c5750600154611d0890617080612990565b4210155b8015611d2f575060025462010000810460ff1664010000000090910461ffff1611155b15610ca657610ca660016122ec565b6001600160a01b038316611d5157600080fd5b6040516001600160a01b0384166024820152604481018290526064810183905260806084820152600060a482018190529060c40160408051601f198184030181529181526020820180516001600160e01b03167f731133e900000000000000000000000000000000000000000000000000000000179052600d5490519192506000916001600160a01b0390911690611dea908490612949565b6000604051808303816000865af19150503d8060008114611e27576040519150601f19603f3d011682016040523d82523d6000602084013e611e2c565b606091505b505090508061132857600080fd5b6016546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611e9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec09190612710565b600754909150811015611f155760405162461bcd60e51b815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604482015260640161090b565b6016546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa158015611f7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa19190612710565b600754909150811015611ff65760405162461bcd60e51b815260206004820152601560248201527f506c6561736520617070726f766520616d6f756e740000000000000000000000604482015260640161090b565b601654600a546007546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201526001600160a01b03928316602482015260448101919091529116906323b872dd906064016020604051808303816000875af115801561206e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120929190612cee565b6120de5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572204661696c65640000000000000000000000000000000000604482015260640161090b565b60405130602482015233604482015260009060640160408051601f198184030181529181526020820180516001600160e01b03167fd1ed3dad00000000000000000000000000000000000000000000000000000000179052600e54905191925060009182916001600160a01b031690612158908590612949565b6000604051808303816000865af19150503d8060008114612195576040519150601f19603f3d011682016040523d82523d6000602084013e61219a565b606091505b5091509150816121ec5760405162461bcd60e51b815260206004820152601060248201527f4b697474656e206e6f7420616464656400000000000000000000000000000000604482015260640161090b565b6000818060200190518101906122029190612710565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0155505050505050565b6000805460ff166005811115612255576122556126d2565b146122c85760405162461bcd60e51b815260206004820152602260248201527f4e6f7420696e2074686520496e697469616c436f6c6c656374696f6e2073746160448201527f6765000000000000000000000000000000000000000000000000000000000000606482015260840161090b565b426001556002805460ff90921663010000000263ff00000019909216919091179055565b6000805460ff80841691166005811115612308576123086126d2565b6123129190612990565b90506006811115612321575060065b6000547f06246b8f6e064f49e451fe9caf18d443c71c2dfdcef11b6bc2ea4a00312d777090309060ff16600581111561235c5761235c6126d2565b604080516001600160a01b0390931683526020830191909152810183905260600160405180910390a1806005811115612397576123976126d2565b6000805460ff191660018360058111156123b3576123b36126d2565b0217905550504260015550565b5080546000825590600052602060002090810190610e839190612462565b8280546123ea9061286c565b90600052602060002090601f01602090048101928261240c5760008555612452565b82601f1061242557805160ff1916838001178555612452565b82800160010185558215612452579182015b82811115612452578251825591602001919060010190612437565b5061245e929150612462565b5090565b5b8082111561245e5760008155600101612463565b60ff81168114610e8357600080fd5b60006020828403121561249857600080fd5b81356124a381612477565b9392505050565b6000602082840312156124bc57600080fd5b5035919050565b60005b838110156124de5781810151838201526020016124c6565b83811115611b395750506000910152565b602081526000825180602084015261250e8160408501602087016124c3565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561256157612561612522565b604052919050565b600082601f83011261257a57600080fd5b813567ffffffffffffffff81111561259457612594612522565b6125a7601f8201601f1916602001612538565b8181528460208386010111156125bc57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156125ec57600080fd5b823567ffffffffffffffff8082111561260457600080fd5b61261086838701612569565b9350602085013591508082111561262657600080fd5b5061263385828601612569565b9150509250929050565b6001600160a01b0381168114610e8357600080fd5b600080600080600085870361028081121561266c57600080fd5b6101608082121561267c57600080fd5b879650604061015f198301121561269257600080fd5b8701945060a061019f19820112156126a957600080fd5b506101a0860192506102408601356126c08161263d565b94979396509194610260013592915050565b634e487b7160e01b600052602160045260246000fd5b602081016006831061270a57634e487b7160e01b600052602160045260246000fd5b91905290565b60006020828403121561272257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008261275c57634e487b7160e01b600052601260045260246000fd5b500490565b6000602080838503121561277457600080fd5b825167ffffffffffffffff8082111561278c57600080fd5b818501915085601f8301126127a057600080fd5b8151818111156127b2576127b2612522565b8060051b91506127c3848301612538565b81815291830184019184810190888411156127dd57600080fd5b938501935b838510156127fb578451825293850193908501906127e2565b98975050505050505050565b600081518084526020808501945080840160005b838110156128375781518752958201959082019060010161281b565b509495945050505050565b6001600160a01b03831681526040602082015260006128646040830184612807565b949350505050565b600181811c9082168061288057607f821691505b6020821081141561115157634e487b7160e01b600052602260045260246000fd5b600060208083526000845481600182811c9150808316806128c357607f831692505b8583108114156128e157634e487b7160e01b85526022600452602485fd5b8786018381526020018180156128fe576001811461290f5761293a565b60ff1986168252878201965061293a565b60008b81526020902060005b868110156129345781548482015290850190890161291b565b83019750505b50949998505050505050505050565b6000825161295b8184602087016124c3565b9190910192915050565b600062ffffff8083168185168183048111821515161561298757612987612729565b02949350505050565b600082198211156129a3576129a3612729565b500190565b600060ff821660ff84168060ff038211156129c5576129c5612729565b019392505050565b60008160001904831182151516156129e7576129e7612729565b500290565b600081356129f981612477565b92915050565b61ffff81168114610e8357600080fd5b600081356129f9816129ff565b600081356129f98161263d565b612a46612a35836129ec565b825460ff191660ff91909116178255565b612a6b612a55602084016129ec565b825461ff00191660089190911b61ff0016178255565b612a92612a7a604084016129ec565b825462ff0000191660109190911b62ff000016178255565b612abb612aa1606084016129ec565b825463ff000000191660189190911b63ff00000016178255565b612ae8612aca60808401612a0f565b825465ffff00000000191660209190911b65ffff0000000016178255565b612b19612af760a08401612a0f565b825467ffff000000000000191660309190911b67ffff00000000000016178255565b60c0820135600182015560e08201356002820155612b5e612b3d6101008401612a1c565b600383016001600160a01b0382166001600160a01b03198254161781555050565b612b8f612b6e6101208401612a1c565b600483016001600160a01b0382166001600160a01b03198254161781555050565b612bc0612b9f6101408401612a1c565b600583016001600160a01b0382166001600160a01b03198254161781555050565b5050565b8135612bcf8161263d565b81546001600160a01b0319166001600160a01b038216178255506020820135612bf78161263d565b6001820180546001600160a01b0319166001600160a01b038316179055506040820135612c238161263d565b6002820180546001600160a01b0319166001600160a01b038316179055506060820135612c4f8161263d565b6003820180546001600160a01b0319166001600160a01b038316179055506080820135612c7b8161263d565b6004820180546001600160a01b0319166001600160a01b038316179055505050565b600060208284031215612caf57600080fd5b81356124a38161263d565b600060208284031215612ccc57600080fd5b81356124a3816129ff565b600082821015612ce957612ce9612729565b500390565b600060208284031215612d0057600080fd5b815180151581146124a357600080fd5b60006001600160a01b03808716835280861660208401525060806040830152612d3c6080830185612807565b905082606083015295945050505050565b600060ff821660ff811415612d6457612d64612729565b6001019291505056fea2646970667358221220c608d36a3a8eaaa718c99bc9a4d9cb249d03223bb54f9fcbda68de8a17ee4fbb64736f6c634300080b0033";

export class KittyPartyController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KittyPartyController> {
    return super.deploy(overrides || {}) as Promise<KittyPartyController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KittyPartyController {
    return super.attach(address) as KittyPartyController;
  }
  connect(signer: Signer): KittyPartyController__factory {
    return super.connect(signer) as KittyPartyController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KittyPartyControllerInterface {
    return new utils.Interface(_abi) as KittyPartyControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KittyPartyController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KittyPartyController;
  }
}
