// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class KittenAddedToParty extends ethereum.Event {
  get params(): KittenAddedToParty__Params {
    return new KittenAddedToParty__Params(this);
  }
}

export class KittenAddedToParty__Params {
  _event: KittenAddedToParty;

  constructor(event: KittenAddedToParty) {
    this._event = event;
  }

  get Kitten(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get KittyParty(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class KittenCreated extends ethereum.Event {
  get params(): KittenCreated__Params {
    return new KittenCreated__Params(this);
  }
}

export class KittenCreated__Params {
  _event: KittenCreated;

  constructor(event: KittenCreated) {
    this._event = event;
  }

  get Kitten(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Contract__getAllListResultValue0Struct extends ethereum.Tuple {
  get kitten(): Address {
    return this[0].toAddress();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__getAllValueAtResultValue0Struct extends ethereum.Tuple {
  get kitten(): Address {
    return this[0].toAddress();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__getListResultValue0Struct extends ethereum.Tuple {
  get kitten(): Address {
    return this[0].toAddress();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract__getValueAtResultValue0Struct extends ethereum.Tuple {
  get kitten(): Address {
    return this[0].toAddress();
  }

  get reputation(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  KITTYPARTY(): Bytes {
    let result = super.call("KITTYPARTY", "KITTYPARTY():(bytes32)", []);

    return result[0].toBytes();
  }

  try_KITTYPARTY(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("KITTYPARTY", "KITTYPARTY():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  checkAllExists(_kitten: Address): boolean {
    let result = super.call(
      "checkAllExists",
      "checkAllExists(address):(bool)",
      [ethereum.Value.fromAddress(_kitten)]
    );

    return result[0].toBoolean();
  }

  try_checkAllExists(_kitten: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkAllExists",
      "checkAllExists(address):(bool)",
      [ethereum.Value.fromAddress(_kitten)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkExists(kittyParty: Address, _kitten: Address): boolean {
    let result = super.call(
      "checkExists",
      "checkExists(address,address):(bool)",
      [
        ethereum.Value.fromAddress(kittyParty),
        ethereum.Value.fromAddress(_kitten)
      ]
    );

    return result[0].toBoolean();
  }

  try_checkExists(
    kittyParty: Address,
    _kitten: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkExists",
      "checkExists(address,address):(bool)",
      [
        ethereum.Value.fromAddress(kittyParty),
        ethereum.Value.fromAddress(_kitten)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getAllLength(): BigInt {
    let result = super.call("getAllLength", "getAllLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getAllLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getAllLength", "getAllLength():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllList(): Array<Contract__getAllListResultValue0Struct> {
    let result = super.call(
      "getAllList",
      "getAllList():((address,uint256)[])",
      []
    );

    return result[0].toTupleArray<Contract__getAllListResultValue0Struct>();
  }

  try_getAllList(): ethereum.CallResult<
    Array<Contract__getAllListResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllList",
      "getAllList():((address,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__getAllListResultValue0Struct>()
    );
  }

  getAllValueAt(i: BigInt): Contract__getAllValueAtResultValue0Struct {
    let result = super.call(
      "getAllValueAt",
      "getAllValueAt(uint256):((address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(i)]
    );

    return result[0].toTuple() as Contract__getAllValueAtResultValue0Struct;
  }

  try_getAllValueAt(
    i: BigInt
  ): ethereum.CallResult<Contract__getAllValueAtResultValue0Struct> {
    let result = super.tryCall(
      "getAllValueAt",
      "getAllValueAt(uint256):((address,uint256))",
      [ethereum.Value.fromUnsignedBigInt(i)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Contract__getAllValueAtResultValue0Struct
    );
  }

  getIndex(_kitten: Address): BigInt {
    let result = super.call("getIndex", "getIndex(address):(uint256)", [
      ethereum.Value.fromAddress(_kitten)
    ]);

    return result[0].toBigInt();
  }

  try_getIndex(_kitten: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getIndex", "getIndex(address):(uint256)", [
      ethereum.Value.fromAddress(_kitten)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIndex1(kittyParty: Address, _kitten: Address): BigInt {
    let result = super.call("getIndex", "getIndex(address,address):(uint256)", [
      ethereum.Value.fromAddress(kittyParty),
      ethereum.Value.fromAddress(_kitten)
    ]);

    return result[0].toBigInt();
  }

  try_getIndex1(
    kittyParty: Address,
    _kitten: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIndex",
      "getIndex(address,address):(uint256)",
      [
        ethereum.Value.fromAddress(kittyParty),
        ethereum.Value.fromAddress(_kitten)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLength(kittyParty: Address): BigInt {
    let result = super.call("getLength", "getLength(address):(uint256)", [
      ethereum.Value.fromAddress(kittyParty)
    ]);

    return result[0].toBigInt();
  }

  try_getLength(kittyParty: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getLength", "getLength(address):(uint256)", [
      ethereum.Value.fromAddress(kittyParty)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getList(kittyParty: Address): Array<Contract__getListResultValue0Struct> {
    let result = super.call(
      "getList",
      "getList(address):((address,uint256)[])",
      [ethereum.Value.fromAddress(kittyParty)]
    );

    return result[0].toTupleArray<Contract__getListResultValue0Struct>();
  }

  try_getList(
    kittyParty: Address
  ): ethereum.CallResult<Array<Contract__getListResultValue0Struct>> {
    let result = super.tryCall(
      "getList",
      "getList(address):((address,uint256)[])",
      [ethereum.Value.fromAddress(kittyParty)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__getListResultValue0Struct>()
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getValueAt(
    kittyParty: Address,
    i: BigInt
  ): Contract__getValueAtResultValue0Struct {
    let result = super.call(
      "getValueAt",
      "getValueAt(address,uint256):((address,uint256))",
      [
        ethereum.Value.fromAddress(kittyParty),
        ethereum.Value.fromUnsignedBigInt(i)
      ]
    );

    return result[0].toTuple() as Contract__getValueAtResultValue0Struct;
  }

  try_getValueAt(
    kittyParty: Address,
    i: BigInt
  ): ethereum.CallResult<Contract__getValueAtResultValue0Struct> {
    let result = super.tryCall(
      "getValueAt",
      "getValueAt(address,uint256):((address,uint256))",
      [
        ethereum.Value.fromAddress(kittyParty),
        ethereum.Value.fromUnsignedBigInt(i)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as Contract__getValueAtResultValue0Struct
    );
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddKittenCall extends ethereum.Call {
  get inputs(): AddKittenCall__Inputs {
    return new AddKittenCall__Inputs(this);
  }

  get outputs(): AddKittenCall__Outputs {
    return new AddKittenCall__Outputs(this);
  }
}

export class AddKittenCall__Inputs {
  _call: AddKittenCall;

  constructor(call: AddKittenCall) {
    this._call = call;
  }

  get value(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddKittenCall__Outputs {
  _call: AddKittenCall;

  constructor(call: AddKittenCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetupKittyPartyCall extends ethereum.Call {
  get inputs(): SetupKittyPartyCall__Inputs {
    return new SetupKittyPartyCall__Inputs(this);
  }

  get outputs(): SetupKittyPartyCall__Outputs {
    return new SetupKittyPartyCall__Outputs(this);
  }
}

export class SetupKittyPartyCall__Inputs {
  _call: SetupKittyPartyCall;

  constructor(call: SetupKittyPartyCall) {
    this._call = call;
  }

  get childContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetupKittyPartyCall__Outputs {
  _call: SetupKittyPartyCall;

  constructor(call: SetupKittyPartyCall) {
    this._call = call;
  }
}
